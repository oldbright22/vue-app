{"ast":null,"code":"\"use strict\";\n\n// File generated from our OpenAPI spec by Stainless.\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MessageFilesPage = exports.Files = void 0;\nconst resource_1 = require(\"openai/resource\");\nconst core_1 = require(\"openai/core\");\nconst FilesAPI = __importStar(require(\"openai/resources/beta/threads/messages/files\"));\nconst pagination_1 = require(\"openai/pagination\");\nclass Files extends resource_1.APIResource {\n  /**\n   * Retrieves a message file.\n   */\n  retrieve(threadId, messageId, fileId, options) {\n    return this._client.get(`/threads/${threadId}/messages/${messageId}/files/${fileId}`, {\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v1',\n        ...options?.headers\n      }\n    });\n  }\n  list(threadId, messageId, query = {}, options) {\n    if ((0, core_1.isRequestOptions)(query)) {\n      return this.list(threadId, messageId, {}, query);\n    }\n    return this._client.getAPIList(`/threads/${threadId}/messages/${messageId}/files`, MessageFilesPage, {\n      query,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v1',\n        ...options?.headers\n      }\n    });\n  }\n}\nexports.Files = Files;\nclass MessageFilesPage extends pagination_1.CursorPage {}\nexports.MessageFilesPage = MessageFilesPage;\n(function (Files) {\n  Files.MessageFilesPage = FilesAPI.MessageFilesPage;\n})(Files = exports.Files || (exports.Files = {}));","map":{"version":3,"names":["resource_1","require","core_1","FilesAPI","__importStar","pagination_1","Files","APIResource","retrieve","threadId","messageId","fileId","options","_client","get","headers","list","query","isRequestOptions","getAPIList","MessageFilesPage","exports","CursorPage"],"sources":["../../../../src/resources/beta/threads/messages/files.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,MAAAA,UAAA,GAAAC,OAAA;AACA,MAAAC,MAAA,GAAAD,OAAA;AACA,MAAAE,QAAA,GAAAC,YAAA,CAAAH,OAAA;AACA,MAAAI,YAAA,GAAAJ,OAAA;AAEA,MAAaK,KAAM,SAAQN,UAAA,CAAAO,WAAW;EACpC;;;EAGAC,QAAQA,CACNC,QAAgB,EAChBC,SAAiB,EACjBC,MAAc,EACdC,OAA6B;IAE7B,OAAO,IAAI,CAACC,OAAO,CAACC,GAAG,CAAC,YAAYL,QAAQ,aAAaC,SAAS,UAAUC,MAAM,EAAE,EAAE;MACpF,GAAGC,OAAO;MACVG,OAAO,EAAE;QAAE,aAAa,EAAE,eAAe;QAAE,GAAGH,OAAO,EAAEG;MAAO;KAC/D,CAAC;EACJ;EAgBAC,IAAIA,CACFP,QAAgB,EAChBC,SAAiB,EACjBO,KAAA,GAA8C,EAAE,EAChDL,OAA6B;IAE7B,IAAI,IAAAV,MAAA,CAAAgB,gBAAgB,EAACD,KAAK,CAAC,EAAE;MAC3B,OAAO,IAAI,CAACD,IAAI,CAACP,QAAQ,EAAEC,SAAS,EAAE,EAAE,EAAEO,KAAK,CAAC;;IAElD,OAAO,IAAI,CAACJ,OAAO,CAACM,UAAU,CAAC,YAAYV,QAAQ,aAAaC,SAAS,QAAQ,EAAEU,gBAAgB,EAAE;MACnGH,KAAK;MACL,GAAGL,OAAO;MACVG,OAAO,EAAE;QAAE,aAAa,EAAE,eAAe;QAAE,GAAGH,OAAO,EAAEG;MAAO;KAC/D,CAAC;EACJ;;AA5CFM,OAAA,CAAAf,KAAA,GAAAA,KAAA;AA+CA,MAAac,gBAAiB,SAAQf,YAAA,CAAAiB,UAAuB;AAA7DD,OAAA,CAAAD,gBAAA,GAAAA,gBAAA;AA6CA,WAAiBd,KAAK;EAENA,KAAA,CAAAc,gBAAgB,GAAGjB,QAAQ,CAACiB,gBAAgB;AAE5D,CAAC,EAJgBd,KAAK,GAALe,OAAA,CAAAf,KAAK,KAALe,OAAA,CAAAf,KAAK"},"metadata":{},"sourceType":"script","externalDependencies":[]}