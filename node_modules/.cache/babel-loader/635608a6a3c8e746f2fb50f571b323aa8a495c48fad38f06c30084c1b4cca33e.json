{"ast":null,"code":"\"use strict\";\n\n// File generated from our OpenAPI spec by Stainless.\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RunsPage = exports.Runs = void 0;\nconst resource_1 = require(\"openai/resource\");\nconst core_1 = require(\"openai/core\");\nconst RunsAPI = __importStar(require(\"openai/resources/beta/threads/runs/runs\"));\nconst StepsAPI = __importStar(require(\"openai/resources/beta/threads/runs/steps\"));\nconst pagination_1 = require(\"openai/pagination\");\nclass Runs extends resource_1.APIResource {\n  constructor() {\n    super(...arguments);\n    this.steps = new StepsAPI.Steps(this._client);\n  }\n  /**\n   * Create a run.\n   */\n  create(threadId, body, options) {\n    return this._client.post(`/threads/${threadId}/runs`, {\n      body,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v1',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Retrieves a run.\n   */\n  retrieve(threadId, runId, options) {\n    return this._client.get(`/threads/${threadId}/runs/${runId}`, {\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v1',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Modifies a run.\n   */\n  update(threadId, runId, body, options) {\n    return this._client.post(`/threads/${threadId}/runs/${runId}`, {\n      body,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v1',\n        ...options?.headers\n      }\n    });\n  }\n  list(threadId, query = {}, options) {\n    if ((0, core_1.isRequestOptions)(query)) {\n      return this.list(threadId, {}, query);\n    }\n    return this._client.getAPIList(`/threads/${threadId}/runs`, RunsPage, {\n      query,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v1',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Cancels a run that is `in_progress`.\n   */\n  cancel(threadId, runId, options) {\n    return this._client.post(`/threads/${threadId}/runs/${runId}/cancel`, {\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v1',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * When a run has the `status: \"requires_action\"` and `required_action.type` is\n   * `submit_tool_outputs`, this endpoint can be used to submit the outputs from the\n   * tool calls once they're all completed. All outputs must be submitted in a single\n   * request.\n   */\n  submitToolOutputs(threadId, runId, body, options) {\n    return this._client.post(`/threads/${threadId}/runs/${runId}/submit_tool_outputs`, {\n      body,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v1',\n        ...options?.headers\n      }\n    });\n  }\n}\nexports.Runs = Runs;\nclass RunsPage extends pagination_1.CursorPage {}\nexports.RunsPage = RunsPage;\n(function (Runs) {\n  Runs.RunsPage = RunsAPI.RunsPage;\n  Runs.Steps = StepsAPI.Steps;\n  Runs.RunStepsPage = StepsAPI.RunStepsPage;\n})(Runs = exports.Runs || (exports.Runs = {}));","map":{"version":3,"names":["resource_1","require","core_1","RunsAPI","__importStar","StepsAPI","pagination_1","Runs","APIResource","constructor","steps","Steps","_client","create","threadId","body","options","post","headers","retrieve","runId","get","update","list","query","isRequestOptions","getAPIList","RunsPage","cancel","submitToolOutputs","exports","CursorPage","RunStepsPage"],"sources":["../../../../src/resources/beta/threads/runs/runs.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}