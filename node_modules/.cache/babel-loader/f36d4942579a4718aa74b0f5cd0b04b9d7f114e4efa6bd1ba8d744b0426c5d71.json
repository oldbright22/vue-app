{"ast":null,"code":"\"use strict\";\n\n// File generated from our OpenAPI spec by Stainless.\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ThreadMessagesPage = exports.Messages = void 0;\nconst resource_1 = require(\"openai/resource\");\nconst core_1 = require(\"openai/core\");\nconst MessagesAPI = __importStar(require(\"openai/resources/beta/threads/messages/messages\"));\nconst FilesAPI = __importStar(require(\"openai/resources/beta/threads/messages/files\"));\nconst pagination_1 = require(\"openai/pagination\");\nclass Messages extends resource_1.APIResource {\n  constructor() {\n    super(...arguments);\n    this.files = new FilesAPI.Files(this._client);\n  }\n  /**\n   * Create a message.\n   */\n  create(threadId, body, options) {\n    return this._client.post(`/threads/${threadId}/messages`, {\n      body,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v1',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Retrieve a message.\n   */\n  retrieve(threadId, messageId, options) {\n    return this._client.get(`/threads/${threadId}/messages/${messageId}`, {\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v1',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Modifies a message.\n   */\n  update(threadId, messageId, body, options) {\n    return this._client.post(`/threads/${threadId}/messages/${messageId}`, {\n      body,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v1',\n        ...options?.headers\n      }\n    });\n  }\n  list(threadId, query = {}, options) {\n    if ((0, core_1.isRequestOptions)(query)) {\n      return this.list(threadId, {}, query);\n    }\n    return this._client.getAPIList(`/threads/${threadId}/messages`, ThreadMessagesPage, {\n      query,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v1',\n        ...options?.headers\n      }\n    });\n  }\n}\nexports.Messages = Messages;\nclass ThreadMessagesPage extends pagination_1.CursorPage {}\nexports.ThreadMessagesPage = ThreadMessagesPage;\n(function (Messages) {\n  Messages.ThreadMessagesPage = MessagesAPI.ThreadMessagesPage;\n  Messages.Files = FilesAPI.Files;\n  Messages.MessageFilesPage = FilesAPI.MessageFilesPage;\n})(Messages = exports.Messages || (exports.Messages = {}));","map":{"version":3,"names":["resource_1","require","core_1","MessagesAPI","__importStar","FilesAPI","pagination_1","Messages","APIResource","constructor","files","Files","_client","create","threadId","body","options","post","headers","retrieve","messageId","get","update","list","query","isRequestOptions","getAPIList","ThreadMessagesPage","exports","CursorPage","MessageFilesPage"],"sources":["../../../../src/resources/beta/threads/messages/messages.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,MAAAA,UAAA,GAAAC,OAAA;AACA,MAAAC,MAAA,GAAAD,OAAA;AACA,MAAAE,WAAA,GAAAC,YAAA,CAAAH,OAAA;AACA,MAAAI,QAAA,GAAAD,YAAA,CAAAH,OAAA;AACA,MAAAK,YAAA,GAAAL,OAAA;AAEA,MAAaM,QAAS,SAAQP,UAAA,CAAAQ,WAAW;EAAzCC,YAAA;;IACE,KAAAC,KAAK,GAAmB,IAAIL,QAAQ,CAACM,KAAK,CAAC,IAAI,CAACC,OAAO,CAAC;EAsE1D;EApEE;;;EAGAC,MAAMA,CACJC,QAAgB,EAChBC,IAAyB,EACzBC,OAA6B;IAE7B,OAAO,IAAI,CAACJ,OAAO,CAACK,IAAI,CAAC,YAAYH,QAAQ,WAAW,EAAE;MACxDC,IAAI;MACJ,GAAGC,OAAO;MACVE,OAAO,EAAE;QAAE,aAAa,EAAE,eAAe;QAAE,GAAGF,OAAO,EAAEE;MAAO;KAC/D,CAAC;EACJ;EAEA;;;EAGAC,QAAQA,CACNL,QAAgB,EAChBM,SAAiB,EACjBJ,OAA6B;IAE7B,OAAO,IAAI,CAACJ,OAAO,CAACS,GAAG,CAAC,YAAYP,QAAQ,aAAaM,SAAS,EAAE,EAAE;MACpE,GAAGJ,OAAO;MACVE,OAAO,EAAE;QAAE,aAAa,EAAE,eAAe;QAAE,GAAGF,OAAO,EAAEE;MAAO;KAC/D,CAAC;EACJ;EAEA;;;EAGAI,MAAMA,CACJR,QAAgB,EAChBM,SAAiB,EACjBL,IAAyB,EACzBC,OAA6B;IAE7B,OAAO,IAAI,CAACJ,OAAO,CAACK,IAAI,CAAC,YAAYH,QAAQ,aAAaM,SAAS,EAAE,EAAE;MACrEL,IAAI;MACJ,GAAGC,OAAO;MACVE,OAAO,EAAE;QAAE,aAAa,EAAE,eAAe;QAAE,GAAGF,OAAO,EAAEE;MAAO;KAC/D,CAAC;EACJ;EAWAK,IAAIA,CACFT,QAAgB,EAChBU,KAAA,GAAiD,EAAE,EACnDR,OAA6B;IAE7B,IAAI,IAAAd,MAAA,CAAAuB,gBAAgB,EAACD,KAAK,CAAC,EAAE;MAC3B,OAAO,IAAI,CAACD,IAAI,CAACT,QAAQ,EAAE,EAAE,EAAEU,KAAK,CAAC;;IAEvC,OAAO,IAAI,CAACZ,OAAO,CAACc,UAAU,CAAC,YAAYZ,QAAQ,WAAW,EAAEa,kBAAkB,EAAE;MAClFH,KAAK;MACL,GAAGR,OAAO;MACVE,OAAO,EAAE;QAAE,aAAa,EAAE,eAAe;QAAE,GAAGF,OAAO,EAAEE;MAAO;KAC/D,CAAC;EACJ;;AAtEFU,OAAA,CAAArB,QAAA,GAAAA,QAAA;AAyEA,MAAaoB,kBAAmB,SAAQrB,YAAA,CAAAuB,UAAyB;AAAjED,OAAA,CAAAD,kBAAA,GAAAA,kBAAA;AAuPA,WAAiBpB,QAAQ;EAKTA,QAAA,CAAAoB,kBAAkB,GAAGxB,WAAW,CAACwB,kBAAkB;EAInDpB,QAAA,CAAAI,KAAK,GAAGN,QAAQ,CAACM,KAAK;EAEtBJ,QAAA,CAAAuB,gBAAgB,GAAGzB,QAAQ,CAACyB,gBAAgB;AAE5D,CAAC,EAbgBvB,QAAQ,GAARqB,OAAA,CAAArB,QAAQ,KAARqB,OAAA,CAAArB,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}