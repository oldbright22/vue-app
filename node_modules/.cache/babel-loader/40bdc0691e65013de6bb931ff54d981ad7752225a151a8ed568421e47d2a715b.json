{"ast":null,"code":"\"use strict\";\n\n// File generated from our OpenAPI spec by Stainless.\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Threads = void 0;\nconst resource_1 = require(\"openai/resource\");\nconst core_1 = require(\"openai/core\");\nconst MessagesAPI = __importStar(require(\"openai/resources/beta/threads/messages/messages\"));\nconst RunsAPI = __importStar(require(\"openai/resources/beta/threads/runs/runs\"));\nclass Threads extends resource_1.APIResource {\n  constructor() {\n    super(...arguments);\n    this.runs = new RunsAPI.Runs(this._client);\n    this.messages = new MessagesAPI.Messages(this._client);\n  }\n  create(body = {}, options) {\n    if ((0, core_1.isRequestOptions)(body)) {\n      return this.create({}, body);\n    }\n    return this._client.post('/threads', {\n      body,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v1',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Retrieves a thread.\n   */\n  retrieve(threadId, options) {\n    return this._client.get(`/threads/${threadId}`, {\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v1',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Modifies a thread.\n   */\n  update(threadId, body, options) {\n    return this._client.post(`/threads/${threadId}`, {\n      body,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v1',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Delete a thread.\n   */\n  del(threadId, options) {\n    return this._client.delete(`/threads/${threadId}`, {\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v1',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Create a thread and run it in one request.\n   */\n  createAndRun(body, options) {\n    return this._client.post('/threads/runs', {\n      body,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v1',\n        ...options?.headers\n      }\n    });\n  }\n}\nexports.Threads = Threads;\n(function (Threads) {\n  Threads.Runs = RunsAPI.Runs;\n  Threads.RunsPage = RunsAPI.RunsPage;\n  Threads.Messages = MessagesAPI.Messages;\n  Threads.ThreadMessagesPage = MessagesAPI.ThreadMessagesPage;\n})(Threads = exports.Threads || (exports.Threads = {}));","map":{"version":3,"names":["resource_1","require","core_1","MessagesAPI","__importStar","RunsAPI","Threads","APIResource","constructor","runs","Runs","_client","messages","Messages","create","body","options","isRequestOptions","post","headers","retrieve","threadId","get","update","del","delete","createAndRun","exports","RunsPage","ThreadMessagesPage"],"sources":["../../../src/resources/beta/threads/threads.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,MAAAA,UAAA,GAAAC,OAAA;AACA,MAAAC,MAAA,GAAAD,OAAA;AAGA,MAAAE,WAAA,GAAAC,YAAA,CAAAH,OAAA;AACA,MAAAI,OAAA,GAAAD,YAAA,CAAAH,OAAA;AAEA,MAAaK,OAAQ,SAAQN,UAAA,CAAAO,WAAW;EAAxCC,YAAA;;IACE,KAAAC,IAAI,GAAiB,IAAIJ,OAAO,CAACK,IAAI,CAAC,IAAI,CAACC,OAAO,CAAC;IACnD,KAAAC,QAAQ,GAAyB,IAAIT,WAAW,CAACU,QAAQ,CAAC,IAAI,CAACF,OAAO,CAAC;EA8DzE;EAvDEG,MAAMA,CACJC,IAAA,GAAiD,EAAE,EACnDC,OAA6B;IAE7B,IAAI,IAAAd,MAAA,CAAAe,gBAAgB,EAACF,IAAI,CAAC,EAAE;MAC1B,OAAO,IAAI,CAACD,MAAM,CAAC,EAAE,EAAEC,IAAI,CAAC;;IAE9B,OAAO,IAAI,CAACJ,OAAO,CAACO,IAAI,CAAC,UAAU,EAAE;MACnCH,IAAI;MACJ,GAAGC,OAAO;MACVG,OAAO,EAAE;QAAE,aAAa,EAAE,eAAe;QAAE,GAAGH,OAAO,EAAEG;MAAO;KAC/D,CAAC;EACJ;EAEA;;;EAGAC,QAAQA,CAACC,QAAgB,EAAEL,OAA6B;IACtD,OAAO,IAAI,CAACL,OAAO,CAACW,GAAG,CAAC,YAAYD,QAAQ,EAAE,EAAE;MAC9C,GAAGL,OAAO;MACVG,OAAO,EAAE;QAAE,aAAa,EAAE,eAAe;QAAE,GAAGH,OAAO,EAAEG;MAAO;KAC/D,CAAC;EACJ;EAEA;;;EAGAI,MAAMA,CAACF,QAAgB,EAAEN,IAAwB,EAAEC,OAA6B;IAC9E,OAAO,IAAI,CAACL,OAAO,CAACO,IAAI,CAAC,YAAYG,QAAQ,EAAE,EAAE;MAC/CN,IAAI;MACJ,GAAGC,OAAO;MACVG,OAAO,EAAE;QAAE,aAAa,EAAE,eAAe;QAAE,GAAGH,OAAO,EAAEG;MAAO;KAC/D,CAAC;EACJ;EAEA;;;EAGAK,GAAGA,CAACH,QAAgB,EAAEL,OAA6B;IACjD,OAAO,IAAI,CAACL,OAAO,CAACc,MAAM,CAAC,YAAYJ,QAAQ,EAAE,EAAE;MACjD,GAAGL,OAAO;MACVG,OAAO,EAAE;QAAE,aAAa,EAAE,eAAe;QAAE,GAAGH,OAAO,EAAEG;MAAO;KAC/D,CAAC;EACJ;EAEA;;;EAGAO,YAAYA,CAACX,IAA8B,EAAEC,OAA6B;IACxE,OAAO,IAAI,CAACL,OAAO,CAACO,IAAI,CAAC,eAAe,EAAE;MACxCH,IAAI;MACJ,GAAGC,OAAO;MACVG,OAAO,EAAE;QAAE,aAAa,EAAE,eAAe;QAAE,GAAGH,OAAO,EAAEG;MAAO;KAC/D,CAAC;EACJ;;AA/DFQ,OAAA,CAAArB,OAAA,GAAAA,OAAA;AAyRA,WAAiBA,OAAO;EAMRA,OAAA,CAAAI,IAAI,GAAGL,OAAO,CAACK,IAAI;EAInBJ,OAAA,CAAAsB,QAAQ,GAAGvB,OAAO,CAACuB,QAAQ;EAK3BtB,OAAA,CAAAO,QAAQ,GAAGV,WAAW,CAACU,QAAQ;EAK/BP,OAAA,CAAAuB,kBAAkB,GAAG1B,WAAW,CAAC0B,kBAAkB;AAInE,CAAC,EAxBgBvB,OAAO,GAAPqB,OAAA,CAAArB,OAAO,KAAPqB,OAAA,CAAArB,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}