{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar _ChatCompletionStream_instances, _ChatCompletionStream_currentChatCompletionSnapshot, _ChatCompletionStream_beginRequest, _ChatCompletionStream_addChunk, _ChatCompletionStream_endRequest, _ChatCompletionStream_accumulateChatCompletion;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChatCompletionStream = void 0;\nconst error_1 = require(\"openai/error\");\nconst AbstractChatCompletionRunner_1 = require(\"./AbstractChatCompletionRunner.js\");\nconst streaming_1 = require(\"openai/streaming\");\nclass ChatCompletionStream extends AbstractChatCompletionRunner_1.AbstractChatCompletionRunner {\n  constructor() {\n    super(...arguments);\n    _ChatCompletionStream_instances.add(this);\n    _ChatCompletionStream_currentChatCompletionSnapshot.set(this, void 0);\n  }\n  get currentChatCompletionSnapshot() {\n    return __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n  }\n  /**\n   * Intended for use on the frontend, consuming a stream produced with\n   * `.toReadableStream()` on the backend.\n   *\n   * Note that messages sent to the model do not appear in `.on('message')`\n   * in this context.\n   */\n  static fromReadableStream(stream) {\n    const runner = new ChatCompletionStream();\n    runner._run(() => runner._fromReadableStream(stream));\n    return runner;\n  }\n  static createChatCompletion(completions, params, options) {\n    const runner = new ChatCompletionStream();\n    runner._run(() => runner._runChatCompletion(completions, {\n      ...params,\n      stream: true\n    }, {\n      ...options,\n      headers: {\n        ...options?.headers,\n        'X-Stainless-Helper-Method': 'stream'\n      }\n    }));\n    return runner;\n  }\n  async _createChatCompletion(completions, params, options) {\n    const signal = options?.signal;\n    if (signal) {\n      if (signal.aborted) this.controller.abort();\n      signal.addEventListener('abort', () => this.controller.abort());\n    }\n    __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n    const stream = await completions.create({\n      ...params,\n      stream: true\n    }, {\n      ...options,\n      signal: this.controller.signal\n    });\n    this._connected();\n    for await (const chunk of stream) {\n      __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n    }\n    if (stream.controller.signal?.aborted) {\n      throw new error_1.APIUserAbortError();\n    }\n    return this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n  }\n  async _fromReadableStream(readableStream, options) {\n    const signal = options?.signal;\n    if (signal) {\n      if (signal.aborted) this.controller.abort();\n      signal.addEventListener('abort', () => this.controller.abort());\n    }\n    __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n    this._connected();\n    const stream = streaming_1.Stream.fromReadableStream(readableStream, this.controller);\n    let chatId;\n    for await (const chunk of stream) {\n      if (chatId && chatId !== chunk.id) {\n        // A new request has been made.\n        this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n      }\n      __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n      chatId = chunk.id;\n    }\n    if (stream.controller.signal?.aborted) {\n      throw new error_1.APIUserAbortError();\n    }\n    return this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n  }\n  [(_ChatCompletionStream_currentChatCompletionSnapshot = new WeakMap(), _ChatCompletionStream_instances = new WeakSet(), _ChatCompletionStream_beginRequest = function _ChatCompletionStream_beginRequest() {\n    if (this.ended) return;\n    __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n  }, _ChatCompletionStream_addChunk = function _ChatCompletionStream_addChunk(chunk) {\n    if (this.ended) return;\n    const completion = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_accumulateChatCompletion).call(this, chunk);\n    this._emit('chunk', chunk, completion);\n    const delta = chunk.choices[0]?.delta?.content;\n    const snapshot = completion.choices[0]?.message;\n    if (delta != null && snapshot?.role === 'assistant' && snapshot?.content) {\n      this._emit('content', delta, snapshot.content);\n    }\n  }, _ChatCompletionStream_endRequest = function _ChatCompletionStream_endRequest() {\n    if (this.ended) {\n      throw new error_1.OpenAIError(`stream has ended, this shouldn't happen`);\n    }\n    const snapshot = __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n    if (!snapshot) {\n      throw new error_1.OpenAIError(`request ended without sending any chunks`);\n    }\n    __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n    return finalizeChatCompletion(snapshot);\n  }, _ChatCompletionStream_accumulateChatCompletion = function _ChatCompletionStream_accumulateChatCompletion(chunk) {\n    var _a, _b, _c;\n    let snapshot = __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n    const {\n      choices,\n      ...rest\n    } = chunk;\n    if (!snapshot) {\n      snapshot = __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, {\n        ...rest,\n        choices: []\n      }, \"f\");\n    } else {\n      Object.assign(snapshot, rest);\n    }\n    for (const {\n      delta,\n      finish_reason,\n      index,\n      logprobs = null,\n      ...other\n    } of chunk.choices) {\n      let choice = snapshot.choices[index];\n      if (!choice) {\n        choice = snapshot.choices[index] = {\n          finish_reason,\n          index,\n          message: {},\n          logprobs,\n          ...other\n        };\n      }\n      if (logprobs) {\n        if (!choice.logprobs) {\n          choice.logprobs = Object.assign({}, logprobs);\n        } else {\n          const {\n            content,\n            ...rest\n          } = logprobs;\n          Object.assign(choice.logprobs, rest);\n          if (content) {\n            (_a = choice.logprobs).content ?? (_a.content = []);\n            choice.logprobs.content.push(...content);\n          }\n        }\n      }\n      if (finish_reason) choice.finish_reason = finish_reason;\n      Object.assign(choice, other);\n      if (!delta) continue; // Shouldn't happen; just in case.\n      const {\n        content,\n        function_call,\n        role,\n        tool_calls,\n        ...rest\n      } = delta;\n      Object.assign(choice.message, rest);\n      if (content) choice.message.content = (choice.message.content || '') + content;\n      if (role) choice.message.role = role;\n      if (function_call) {\n        if (!choice.message.function_call) {\n          choice.message.function_call = function_call;\n        } else {\n          if (function_call.name) choice.message.function_call.name = function_call.name;\n          if (function_call.arguments) {\n            (_b = choice.message.function_call).arguments ?? (_b.arguments = '');\n            choice.message.function_call.arguments += function_call.arguments;\n          }\n        }\n      }\n      if (tool_calls) {\n        if (!choice.message.tool_calls) choice.message.tool_calls = [];\n        for (const {\n          index,\n          id,\n          type,\n          function: fn,\n          ...rest\n        } of tool_calls) {\n          const tool_call = (_c = choice.message.tool_calls)[index] ?? (_c[index] = {});\n          Object.assign(tool_call, rest);\n          if (id) tool_call.id = id;\n          if (type) tool_call.type = type;\n          if (fn) tool_call.function ?? (tool_call.function = {\n            arguments: ''\n          });\n          if (fn?.name) tool_call.function.name = fn.name;\n          if (fn?.arguments) tool_call.function.arguments += fn.arguments;\n        }\n      }\n    }\n    return snapshot;\n  }, Symbol.asyncIterator)]() {\n    const pushQueue = [];\n    const readQueue = [];\n    let done = false;\n    this.on('chunk', chunk => {\n      const reader = readQueue.shift();\n      if (reader) {\n        reader(chunk);\n      } else {\n        pushQueue.push(chunk);\n      }\n    });\n    this.on('end', () => {\n      done = true;\n      for (const reader of readQueue) {\n        reader(undefined);\n      }\n      readQueue.length = 0;\n    });\n    return {\n      next: async () => {\n        if (!pushQueue.length) {\n          if (done) {\n            return {\n              value: undefined,\n              done: true\n            };\n          }\n          return new Promise(resolve => readQueue.push(resolve)).then(chunk => chunk ? {\n            value: chunk,\n            done: false\n          } : {\n            value: undefined,\n            done: true\n          });\n        }\n        const chunk = pushQueue.shift();\n        return {\n          value: chunk,\n          done: false\n        };\n      }\n    };\n  }\n  toReadableStream() {\n    const stream = new streaming_1.Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n    return stream.toReadableStream();\n  }\n}\nexports.ChatCompletionStream = ChatCompletionStream;\nfunction finalizeChatCompletion(snapshot) {\n  const {\n    id,\n    choices,\n    created,\n    model,\n    system_fingerprint,\n    ...rest\n  } = snapshot;\n  return {\n    ...rest,\n    id,\n    choices: choices.map(({\n      message,\n      finish_reason,\n      index,\n      logprobs,\n      ...choiceRest\n    }) => {\n      if (!finish_reason) throw new error_1.OpenAIError(`missing finish_reason for choice ${index}`);\n      const {\n        content = null,\n        function_call,\n        tool_calls,\n        ...messageRest\n      } = message;\n      const role = message.role; // this is what we expect; in theory it could be different which would make our types a slight lie but would be fine.\n      if (!role) throw new error_1.OpenAIError(`missing role for choice ${index}`);\n      if (function_call) {\n        const {\n          arguments: args,\n          name\n        } = function_call;\n        if (args == null) throw new error_1.OpenAIError(`missing function_call.arguments for choice ${index}`);\n        if (!name) throw new error_1.OpenAIError(`missing function_call.name for choice ${index}`);\n        return {\n          ...choiceRest,\n          message: {\n            content,\n            function_call: {\n              arguments: args,\n              name\n            },\n            role\n          },\n          finish_reason,\n          index,\n          logprobs\n        };\n      }\n      if (tool_calls) {\n        return {\n          ...choiceRest,\n          index,\n          finish_reason,\n          logprobs,\n          message: {\n            ...messageRest,\n            role,\n            content,\n            tool_calls: tool_calls.map((tool_call, i) => {\n              const {\n                function: fn,\n                type,\n                id,\n                ...toolRest\n              } = tool_call;\n              const {\n                arguments: args,\n                name,\n                ...fnRest\n              } = fn || {};\n              if (id == null) throw new error_1.OpenAIError(`missing choices[${index}].tool_calls[${i}].id\\n${str(snapshot)}`);\n              if (type == null) throw new error_1.OpenAIError(`missing choices[${index}].tool_calls[${i}].type\\n${str(snapshot)}`);\n              if (name == null) throw new error_1.OpenAIError(`missing choices[${index}].tool_calls[${i}].function.name\\n${str(snapshot)}`);\n              if (args == null) throw new error_1.OpenAIError(`missing choices[${index}].tool_calls[${i}].function.arguments\\n${str(snapshot)}`);\n              return {\n                ...toolRest,\n                id,\n                type,\n                function: {\n                  ...fnRest,\n                  name,\n                  arguments: args\n                }\n              };\n            })\n          }\n        };\n      }\n      return {\n        ...choiceRest,\n        message: {\n          ...messageRest,\n          content,\n          role\n        },\n        finish_reason,\n        index,\n        logprobs\n      };\n    }),\n    created,\n    model,\n    object: 'chat.completion',\n    ...(system_fingerprint ? {\n      system_fingerprint\n    } : {})\n  };\n}\nfunction str(x) {\n  return JSON.stringify(x);\n}","map":{"version":3,"names":["error_1","require","AbstractChatCompletionRunner_1","streaming_1","ChatCompletionStream","AbstractChatCompletionRunner","constructor","_ChatCompletionStream_currentChatCompletionSnapshot","set","currentChatCompletionSnapshot","__classPrivateFieldGet","fromReadableStream","stream","runner","_run","_fromReadableStream","createChatCompletion","completions","params","options","_runChatCompletion","headers","_createChatCompletion","signal","aborted","controller","abort","addEventListener","_ChatCompletionStream_instances","_ChatCompletionStream_beginRequest","call","create","_connected","chunk","_ChatCompletionStream_addChunk","APIUserAbortError","_addChatCompletion","_ChatCompletionStream_endRequest","readableStream","Stream","chatId","id","WeakMap","WeakSet","ended","__classPrivateFieldSet","undefined","completion","_ChatCompletionStream_accumulateChatCompletion","_emit","delta","choices","content","snapshot","message","role","OpenAIError","finalizeChatCompletion","rest","Object","assign","finish_reason","index","logprobs","other","choice","_a","push","function_call","tool_calls","name","arguments","_b","type","function","fn","tool_call","_c","Symbol","asyncIterator","pushQueue","readQueue","done","on","reader","shift","length","next","value","Promise","resolve","then","toReadableStream","bind","exports","created","model","system_fingerprint","map","choiceRest","messageRest","args","i","toolRest","fnRest","str","object","x","JSON","stringify"],"sources":["../src/lib/ChatCompletionStream.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}